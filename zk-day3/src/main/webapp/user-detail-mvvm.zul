<?init class="org.zkoss.zk.ui.util.Composition" arg0="template.zul"?>
<zk>
    <style>
        .window {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 1200px;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .label {
        color: #003366;
        padding: 5px;
        }

        .button {
        background-color: #e0f7ff;
        color: #003366;
        border: 1px solid #003366;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-right: 10px;
        }

        .button:hover {
        background-color: #003366;
        color: white;
        border: 1px solid white;
        }

        .listbox {
        border: 1px solid #ddd;
        background-color: white;
        margin-top: 10px;
        margin-bottom: 10px;
        }

        .listitem:hover {
        background-color: #e0f7ff;
        }

        .listheader {
        background-color: #003366;
        color: white;
        border: none;
        }

        .listcell {
        color: #003366;
        }

        .update-title {
        color: #003366;
        margin-top: 20px;
        margin-bottom: 20px;
        text-align: center;
        }
    </style>
    <zscript>
        <![CDATA[
                user.User newUser = new user.User();

                public void onReset() {
                    Textbox usernameTextbox = (Textbox) self.getFellow("username");
                    Radiogroup genderRadiogroup = (Radiogroup) self.getFellow("gender");
                    Datebox birthdayDatebox = (Datebox) self.getFellow("birthday");
                    Spinner ageSpinner = (Spinner) self.getFellow("age");
                    Combobox provinceCombobox = (Combobox) self.getFellow("province");
                    Combobox cityCombobox = (Combobox) self.getFellow("city");
                    Checkbox acceptTermCheckbox = (Checkbox) self.getFellow("acceptTerm");
                    Button submitButton = (Button) self.getFellow("submitButton");

                    usernameTextbox.setConstraint(null);
                    birthdayDatebox.setConstraint(null);
                    ageSpinner.setConstraint(null);
                    provinceCombobox.setConstraint(null);
                    cityCombobox.setConstraint(null);

                    usernameTextbox.setValue("");
                    genderRadiogroup.setSelectedItem(null);
                    birthdayDatebox.setValue(null);
                    ageSpinner.setValue(0);
                    provinceCombobox.setSelectedItem(null);
                    cityCombobox.setSelectedItem(null);
                    acceptTermCheckbox.setChecked(false);
                    acceptTermCheckbox.setDisabled(true);
                    submitButton.setDisabled(true);
                }

                public void onCheck() {
                    Textbox usernameTextbox = (Textbox) self.getFellow("username");
                    Radiogroup genderRadiogroup = (Radiogroup) self.getFellow("gender");
                    Datebox birthdayDatebox = (Datebox) self.getFellow("birthday");
                    Spinner ageSpinner = (Spinner) self.getFellow("age");
                    Combobox provinceCombobox = (Combobox) self.getFellow("province");
                    Combobox cityCombobox = (Combobox) self.getFellow("city");
                    Checkbox acceptTermCheckbox = (Checkbox) self.getFellow("acceptTerm");
                    Button submitButton = (Button) self.getFellow("submitButton");

                    boolean allFilled = !usernameTextbox.getValue().isEmpty() &&
                                        genderRadiogroup.getSelectedItem() != null &&
                                        birthdayDatebox.getValue() != null &&
                                        ageSpinner.getValue() > 0 && // Ensure age is greater than 0
                                        provinceCombobox.getSelectedItem() != null &&
                                        cityCombobox.getSelectedItem() != null;

                    acceptTermCheckbox.setDisabled(!allFilled);
                    submitButton.setDisabled(!acceptTermCheckbox.isChecked());
                }


                public void onSubmit() {
                    Checkbox acceptTermCheckbox = (Checkbox) self.getFellow("acceptTerm");
                    if (acceptTermCheckbox.isChecked()) {
                        Executions.sendRedirect("user-detail.zul");
                    } else {
                        Messagebox.show("You must accept the terms to submit!", "Warning", Messagebox.OK, Messagebox.EXCLAMATION);
                    }
                }

                public void onProvinceChange() {
                    Combobox provinceCombobox = (Combobox) self.getFellow("province");
                    Combobox cityCombobox = (Combobox) self.getFellow("city");

                    String selectedProvince = provinceCombobox.getValue();
                    cityCombobox.getItems().clear();

                    if ("DKI Jakarta".equals(selectedProvince)) {
                        cityCombobox.appendChild(new Comboitem("Jakarta Pusat"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Barat"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Timur"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Utara"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Selatan"));
                    } else if ("Jawa Barat".equals(selectedProvince)) {
                        cityCombobox.appendChild(new Comboitem("Bandung"));
                        cityCombobox.appendChild(new Comboitem("Bekasi"));
                        cityCombobox.appendChild(new Comboitem("Bogor"));
                        cityCombobox.appendChild(new Comboitem("Depok"));
                        cityCombobox.appendChild(new Comboitem("Cirebon"));
                    } else if ("Banten".equals(selectedProvince)) {
                        cityCombobox.appendChild(new Comboitem("Tangerang"));
                        cityCombobox.appendChild(new Comboitem("Tangerang Selatan"));
                        cityCombobox.appendChild(new Comboitem("Serang"));
                        cityCombobox.appendChild(new Comboitem("Cilegon"));
                    }
                }
                ]]>
    </zscript>
    <window title="User Registration Table" border="normal" sclass="window" self="@define(content)" onOK="@command('search')" viewModel="@id('vm') @init('user.SearchViewModel')" style="margin: 15vh auto;">
    <label class="label">Username:</label>
        <textbox value="@save(vm.keyword)" style="margin-right: 10px;"/>
        <button label="Search" iconSclass="z-icon-search" sclass="button" onClick="@command('search')"/>
        <button label="Delete" iconSclass="z-icon-trash" sclass="button" onClick="@command('deleteUser')"/>
        <listbox model="@bind(vm.userList)" emptyMessage="No user found in the result" rows="5" sclass="listbox" selectedItem="@save(vm.selectedUser)">
            <listhead>
                <listheader label="Id" sclass="listheader"/>
                <listheader label="Username" sclass="listheader"/>
                <listheader label="Gender" sclass="listheader"/>
                <listheader label="Birthday" sclass="listheader"/>
                <listheader label="Age" sclass="listheader"/>
                <listheader label="Province" sclass="listheader"/>
                <listheader label="City" sclass="listheader"/>
            </listhead>
            <template name="model">
                <listitem>
                    <listcell label="@bind(each.id)"/>
                    <listcell label="@bind(each.username)"/>
                    <listcell label="@bind(each.gender)"/>
                    <listcell label="@bind(each.birthday)"/>
                    <listcell label="@bind(each.age)"/>
                    <listcell label="@bind(each.province)"/>
                    <listcell label="@bind(each.city)"/>
                </listitem>
            </template>
        </listbox>
        <div sclass="update-title">
            <label value="Update Data" style="font-weight: bold; font-size: 18px;"/>
        </div>
        <hlayout>
            <vlayout hflex="1">
                <div style="display: flex; gap: 15px; flex-direction: row; margin-left: 20vh; margin-right: 20vh;">
                    <div style="display: flex; align-items: center; flex-direction: column; width: 20vw;">
                        <label value="Username" style="margin-top: 2vh; margin-bottom: 1vh;"/>
                        <textbox id="username" width="99%" constraint="no empty" value="@bind(vm.selectedUser.username)"/>
                        <label value="Gender" style="margin-top: 2vh; margin-bottom: 2vh;"/>
                        <radiogroup id="gender" selectedItem="@bind(vm.selectedUser.gender)" disabled="false">
                            <radio label="Male" value="Male" iconSclass="z-icon-male"/>
                            <radio label="Female" value="Female" iconSclass="z-icon-female"/>
                        </radiogroup>
                    </div>
                    <div style="display: flex; align-items: center; flex-direction: column; width: 20vw;">
                        <label value="Birthday" style="margin-top: 2vh; margin-bottom: 1vh;"/>
                        <datebox width="99%" value="@bind(vm.selectedUser.birthday)"/>
                        <label value="Age" style="margin-top: 2vh; margin-bottom: 1vh;"/>
                        <spinner id="age" constraint="no empty, min 0" width="99%" value="@bind(vm.selectedUser.age)"/>
                    </div>
                    <div style="display: flex; align-items: center;  flex-direction: column; width: 20vw;">
                        <label value="Province" style="margin-top: 2vh; margin-bottom: 1vh;"/>
                        <combobox id="province" constraint="no empty" onChange="onProvinceChange()" width="99%" value="@bind(vm.selectedUser.province)">
                            <comboitem label="DKI Jakarta" value="DKI Jakarta"/>
                            <comboitem label="Banten" value="Banten"/>
                            <comboitem label="Jawa Barat" value="Jawa Barat"/>
                        </combobox>
                        <label value="City" style="margin-top: 2vh; margin-bottom: 1vh;"/>
                        <combobox id="city" constraint="no empty" onChange="onCheck()" width="99%" value="@bind(vm.selectedUser.city)"/>
                    </div>
                </div>
            </vlayout>
        </hlayout>
        <div style="display: flex; justify-content: center; margin-top: 20px; margin-bottom: 20px;">
            <button label="Update" width="100px" onClick="@command('updateUser')" sclass="button"/>
        </div>
    </window>
</zk>
