<?init class="org.zkoss.zk.ui.util.Composition" arg0="template.zul"?>
<zk>
    <style>
        .column {
        background-color: #003366;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .button {
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s, color 0.3s;
        }

        .reset-button {
        background-color: #e0f7ff;
        color: #003366;
        border: 1px solid #003366;
        }

        .reset-button:hover {
        background-color: #003366;
        color: white;
        border: 1px solid white;
        }

        .submit-button {
        background-color: #003366;
        color: white;
        border: 1px solid #003366;
        }

        .submit-button:hover {
        background-color: white;
        color: #003366;
        border: 1px solid #003366;
        }

        .button:disabled {
        background-color: #f0f0f0;
        color: #a0a0a0;
        border: 1px solid #ddd;
        cursor: not-allowed;
        }
    </style>
    <zscript>
        <![CDATA[
                public void onReset() {
                    Textbox usernameTextbox = (Textbox) self.getFellow("username");
                    Radiogroup genderRadiogroup = (Radiogroup) self.getFellow("gender");
                    Datebox birthdayDatebox = (Datebox) self.getFellow("birthday");
                    Spinner ageSpinner = (Spinner) self.getFellow("age");
                    Combobox provinceCombobox = (Combobox) self.getFellow("province");
                    Combobox cityCombobox = (Combobox) self.getFellow("city");
                    Checkbox acceptTermCheckbox = (Checkbox) self.getFellow("acceptTerm");
                    Button submitButton = (Button) self.getFellow("submitButton");

                    usernameTextbox.setConstraint(null);
                    birthdayDatebox.setConstraint(null);
                    ageSpinner.setConstraint(null);
                    provinceCombobox.setConstraint(null);
                    cityCombobox.setConstraint(null);

                    usernameTextbox.setValue("");
                    genderRadiogroup.setSelectedItem(null);
                    birthdayDatebox.setValue(null);
                    ageSpinner.setValue(0);
                    provinceCombobox.setSelectedItem(null);
                    cityCombobox.setSelectedItem(null);
                    acceptTermCheckbox.setChecked(false);
                    acceptTermCheckbox.setDisabled(true);
                    submitButton.setDisabled(true);
                }

                public void onCheck() {
                    Textbox usernameTextbox = (Textbox) self.getFellow("username");
                    Radiogroup genderRadiogroup = (Radiogroup) self.getFellow("gender");
                    Datebox birthdayDatebox = (Datebox) self.getFellow("birthday");
                    Spinner ageSpinner = (Spinner) self.getFellow("age");
                    Combobox provinceCombobox = (Combobox) self.getFellow("province");
                    Combobox cityCombobox = (Combobox) self.getFellow("city");
                    Checkbox acceptTermCheckbox = (Checkbox) self.getFellow("acceptTerm");
                    Button submitButton = (Button) self.getFellow("submitButton");

                    boolean allFilled = !usernameTextbox.getValue().isEmpty() &&
                                        genderRadiogroup.getSelectedItem() != null &&
                                        birthdayDatebox.getValue() != null &&
                                        ageSpinner.getValue() > 0 && // Ensure age is greater than 0
                                        provinceCombobox.getSelectedItem() != null &&
                                        cityCombobox.getSelectedItem() != null;

                    acceptTermCheckbox.setDisabled(!allFilled);
                    submitButton.setDisabled(!acceptTermCheckbox.isChecked());
                }


                public void onSubmit() {
                    Checkbox acceptTermCheckbox = (Checkbox) self.getFellow("acceptTerm");
                    if (acceptTermCheckbox.isChecked()) {
                        Executions.sendRedirect("user-detail.zul");
                    } else {
                        Messagebox.show("You must accept the terms to submit!", "Warning", Messagebox.OK, Messagebox.EXCLAMATION);
                    }
                }

                public void onProvinceChange() {
                    Combobox provinceCombobox = (Combobox) self.getFellow("province");
                    Combobox cityCombobox = (Combobox) self.getFellow("city");

                    String selectedProvince = provinceCombobox.getValue();
                    cityCombobox.getItems().clear();

                    if ("DKI Jakarta".equals(selectedProvince)) {
                        cityCombobox.appendChild(new Comboitem("Jakarta Pusat"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Barat"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Timur"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Utara"));
                        cityCombobox.appendChild(new Comboitem("Jakarta Selatan"));
                    } else if ("Jawa Barat".equals(selectedProvince)) {
                        cityCombobox.appendChild(new Comboitem("Bandung"));
                        cityCombobox.appendChild(new Comboitem("Bekasi"));
                        cityCombobox.appendChild(new Comboitem("Bogor"));
                        cityCombobox.appendChild(new Comboitem("Depok"));
                        cityCombobox.appendChild(new Comboitem("Cirebon"));
                    } else if ("Banten".equals(selectedProvince)) {
                        cityCombobox.appendChild(new Comboitem("Tangerang"));
                        cityCombobox.appendChild(new Comboitem("Tangerang Selatan"));
                        cityCombobox.appendChild(new Comboitem("Serang"));
                        cityCombobox.appendChild(new Comboitem("Cilegon"));
                    }
                }
                ]]>
    </zscript>
    <window title="Welcome! New User" border="normal" sclass="center-window" self="@define(content)" viewModel="@id('vm') @init('user.controller.SearchViewModel')">
        <grid>
            <columns>
                <column label="Registration Form" iconSclass="z-icon-user-circle-o" sclass="column"/>
            </columns>
            <rows>
                <row>
                    <label value="Username"/>
                    <textbox id="username" width="99%" constraint="no empty" value="@save(vm.username)"/>
                </row>
                <row>
                    <label value="Gender"/>
                    <radiogroup id="gender" selectedItem="@save(vm.gender)">
                        <radio label="Male" iconSclass="z-icon-male" value="Male"/>
                        <radio label="Female" iconSclass="z-icon-female" value="Female"/>
                    </radiogroup>
                </row>
                <row>
                    <label value="Birthday"/>
                    <datebox id="birthday" width="99%" constraint="no empty, no future" value="@save(vm.birthday)"/>
                </row>
                <row>
                    <label value="Age"/>
                    <spinner id="age" constraint="no empty, min 0" width="99%" value="@save(vm.age)"/>
                </row>
                <row>
                    <label value="Province"/>
                    <combobox id="province" constraint="no empty" onChange="onProvinceChange()" width="99%" value="@save(vm.province)">
                        <comboitem label="DKI Jakarta" value="DKI Jakarta"/>
                        <comboitem label="Banten" value="Banten"/>
                        <comboitem label="Jawa Barat" value="Jawa Barat"/>
                    </combobox>
                </row>
                <row>
                    <label value="City"/>
                    <combobox id="city" constraint="no empty" onChange="onCheck()" width="99%" value="@save(vm.city)"/>
                </row>
                <row spans="2" align="right">
                    <hlayout>
                        <checkbox id="acceptTerm" onCheck="onCheck()" disabled="true"/>
                        <label value="Accept Term of Use (Click for detail)" popup="showTerm, position=end_after" style="cursor: pointer"/>
                    </hlayout>
                </row>
                <row spans="2" align="right">
                    <div>
                        <label value="Help (Ctrl+h)" popup="showHelp, position=end_after" style="cursor: pointer"/>
                        <button label="Reset" width="100px" onClick="onReset()" sclass="reset-button"/>
                        <button id="submitButton" label="Submit" width="100px" onClick="@command('addUser')" disabled="true" sclass="submit-button"/>
                    </div>
                </row>
            </rows>
        </grid>
        <popup id="showTerm">
            Term of Use
        </popup>
        <popup id="showHelp">
            Help
        </popup>
    </window>
</zk>
